<!DOCTYPE html>
<html>
<head>
	<meta charset="UTF-8">
	<title>리터럴 함수</title>
</head>
<body>
	<script>

	//***** [결론] 우리는 함수 선언을 호출 전에 하자
	
	// [ 호이스팅 개념을 모르는 경우 ]
	// @ function 명령은 정적인 구조이고, 
	// @ 함수리터럴과 화살표함수는 실행시 판단한다.

	/*
		호이스팅(hoisting:끌어올리다) : 
			함수 선언문은 선언부가 뒤에 있어도 호이스팅이 되지만
			함수 리터럴은 뒤에 있으면 호이스팅이 되지 않는다.
	*/
	
	/* 
	document.writeln('삼각형의 면적은 :' +  triangle(4,3) + '<br/>');
	
	function triangle ( base, height ){
		return base * height / 2;
	}
	  */
	/* 
	 
	document.writeln('4.삼각형의 면적은 2: ' +  triangle2(4,3) + '<br/>');		
	
	var triangle2 = function( base, height ){
		return base * height / 2;
	}	
	 */
	
	
	
	// @ 함수는 데이터형의 일종이다. => 함수가 변수의 값이다 ★★자바스크립트 이해에 가장 중요한 문장
	
	var triangle = function( base, height ){
					return base * height / 2;
					}
	
	document.writeln('4.삼각형의 면적은 2: ' +  triangle(4,3) + '<br/>');		
	
	document.writeln(triangle + '<hr/>'); //triangle이라는 변수에 함수 코딩이 들어간다.
	
	triangle = '문자로전환';
	document.writeln(triangle + '<hr/>');
	
	triangle = 1004;
	document.writeln(triangle + '<hr/>');
	
	
	
	
	</script>
</body>
</html>