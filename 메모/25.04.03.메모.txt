25.04.03.메모

아침 - 예외처리 수업
노션 정리할 것!

심각하지 않은 오류(예외)로 인해서 프로그램이 도중에 멈추면(비정상적으로 끝나면) 안 됨. => 예외처리를 해준다.
ㄴ예외를 잡아라: try catch
ㄴ예외를 던져라: 메소드 뒤에 throws
=프로그램을 정상적으로 끝나게 하는 게 최종 목적

str: 변수명 위험 (다른 언어에서)

String[] msg = new String[] {"행복합시다", "즐깁시다", "멍때리기"};
ㄴnew String[] 을 자주 생략한다.
ㄴ문자열 배열을 잡았다.

스트림: 데이터가 시냇물을 타고 전송한다. 
=데이터가 주고받는 통로

입출력에 관련된 패키지: io패키지 
io=입출력

Unhandled exception 은 바로 처리해주기

구체적인 애
FileNotFoundException
IOException
범용적인 애
Exception

문제가 어디서 발생했는지 알려줘야해
throws Exception -> 모든 예외가 다 발생해도 던질거야

Unhandled exception type Exception : 예외처리 안 되어 있으니 해주세요

e.getMessage(): 간단하게 보겠다.

read
입출력은 예외 수시로 발생. 읽다가도 예외 수시로 
close는 무조건 해줘야해

던지는 것도 예외처리

throws: 나를 부른 곳에다가 예외를 던지는 것
throw: 

이러한 함수를 호출한다.
method();
static void method() {
	}

일부러 예외를 만들어서 처리하는 경우가 있다.

하나의 사이트에 보통 100개의 페이지가 있어. 예외가 많이 발생해. 
너무 많다 보니 회원관리 쪽에서 발생하는 건 멤버 익셉션, 게시판은 보드 익셉션, 주문은 오더~
로 계속 예외를 발생시켜
운영자가 예외가 발생하면 추적에서 어디가 잘못했는지 알 수 있으나
일부러 익셉션을 만들어서 발생시켜
바로 알 수 있게끔

메소드 뒤에서 예외를 던지는 것은 throws
밑에 throw 로 객체를 생성하자 

1. 4번 2. 컴파일 에러 1번 3. finally출력 4. catch try catch try catch -> try 2번 발생
5. Io, FI, End 3번 6. 컴파일에러 (범위 큰애가 앞에 있어서) 7. ACDBC

sql 틈틈이 연습하기! SQL문제는 꼼꼼하게 풀어야해

PreparedStatement
	Statement의 자식. ?가 없어도 쓸 수 있다.
	97~98%를 쓴다.

리턴값이 달라 
executeUpdate ->int로 받아	
executeQuery: select ->ResultSet으로 받아

닫는건 finally에서 

카피 패스트를 아는 상태에서 써야해

인간은 지피티를 검증할 수 있어야 하기에 겁나 공부해야돼

데이터베이스 커넥션은 닫는게 너무 중요. 못써서 버벅거리지 말라고

프로세스: 프로그램을 실행하는애

죽이는 순서
자식 먼저 > 부모 다음 
ps 먼저 닫기

프로젝트를 하면서 실력이 향상되는 것

*할 것*
입력,수정,삭제: CRUD를 해본다. /DB연결
회사문제: 풀어본다.
오늘부터 sqld문제 오픈

프로젝트를 잘 보기 위한 시각화=통계 필요=group by를 쓰게 된다. ->쿼리가 복잡해져

next함수: 한줄 내려오게 해서 읽을 수 있게끔

-------오후------------------------

확장성을 위해서 인터페이스를 만든다. (표준안을 만들기 위해서)

jfreechart - 샘플
https://www.jfree.org/jfreechart/samples.html

*준비:
z_freechart파일 Review-src 폴더 밑에 넣기-Build Path-jar파일 2개 apply
자바의 클래스 묶음파일: JAR

1.업무별 평균 월급을 구하는 문장
SELECT round(avg(sal)) AS sal, nvl(job,'인턴') AS ename
FROM emp
GROUP BY job
ORDER BY wol;
















