25.04.07.메모

sql : 하나도 틀리면 안된다. 이거 먼저 풀기
오전 javascript +  오후 bootstrap 나갈 예정
ㄴ 자바스크립트까지는 프론트단
ㄴ 마치고 백단인 jsp로 넘어갈 예정
ㄴ포인트는 프로그래밍

html: 글씨, 이미지만 보여주는 애 -> jsp로 바뀔 예정 : 데이터베이스 연동(jsp,asp,php)을 위해서, 자바베이스라서
css: 모양을 예쁘게 꾸미기 위해서
js: 자바스크립트 파일
ㄴ웹브라우저 내에서 실행하는 파일
웹클라이언트/웹서버에서 실행하면 = 프론트엔드/백엔드
자바스크립트: 웹브라우저에서 구동 - 백엔드
ㄴ브라우저 내에서 한글 5자 체킹하는 거
ㄴ제일 어려운 언어. 계속 발전하는 중이라, 기반으로 파생한 애가 많음 .js(node,angular,..) /그담 어려운게 sql문장 만들기
ㄴ자바랑 비슷한 점에서 차이점 위주로 보자

변수 종류 3가지:  var => let/const 

원래명칭: ECMAScript 
ㄴ버전: ES 5(많이 변함),ES 6(조금 정리, 6버전 이후 모두 6이라 함, 문법체계가 이걸 기준으로 달라짐)버전

* 자바스크립트
자바랑 다르다.
객체지향언어
브라우저 문제 거의다 해결
자료형에 국한되지 않음. 그 자체가 문법.
다른 언어를 결합한 게 typescript: 자료형의 구조를 명확하게 하자
리액트에서 타입스크립트 빼고 진행, 나중에 알아서 적용할 것

자바는 웹이라서 스몰/더블 커텐션 구별이 없다.
서버에서 클라이언트에 보내주는 게 파일=화면=document라고 부름(브라우저 입장에서)
자바스크립트 관련 에러는 브라우저 상의 console에 에러가 뜬다. 
구동은 크롬에서

에러 파비콘: 작은 아이콘 -> 무시해도 좋다.         
Failed to load resource: the server:8080/favicon.ico:1 responded with a status of 404 ()

자바스크립트 관련 바로 감지를 위해 플러그인 설치: 설정- 크롬웹스토어-확장프로그램-JavaScript Errors Notifier-추가

들어오는 값에 따라서 자료형이 결정된다. 자료형이 없어도 자동으로 결정.

var는 변수를 중복해서 써도 문제가 안됨
var byensu = '문자열';
var byensu = 1000; 
ㄴ오류 안뜸

let/const var대신에 써가면서 수업듣기
자바에서는 상수를 final로 만들면서 대문자로 많이 쓴다.
자바스크립트도 상수 변수명을 대문자로 많이 쓴다.

"<br/>" - 개행
"<hr/>" - 선
xxx.css 
yyy.js 
처럼 외부파일로 만들어서 사용 (외부 스크립트)

<script type= ~~>
head 안에 쓰는걸 권장, [html5표준]
body안에 밑단에 쓰는 경우도 많다.

<!-- 자바스크립트코드 //--> : 주석모양이지만 주석이 아니다. 지금 브라우저는 자바스크립트를 인식하기 때문에. 다 실행한다.

수치형, 논리형, 문자열(String), 특수형(null/undefined)도 기본형
배열, 객체, 함수★는 참조형

자바: compile language -번역하다-완벽한 번역서가 있어야 돼. .java->.class(번역서) : 조금만 잘못되도 실행이 안돼
js: interpreter language - 번역서가 없어. 한줄씩 읽어나가다 문제발생시 멈춰버린다. (인터프리터 언어)

자바와 파이썬: 자바는 컴파일 언어이고, 파이썬은 인터프리터 언어이다.

스택, 힙 개념 자체가 없다.
배열은 값을 바꿔도 된다.
데이터라는 변수를 값변경하면 안되지만, 
데이터가 가리키고 있는 주소까지 찾아가서 걔를 변경하는 거라 가능
참조 자료형을 변수에 할당할 때는 변수에 값이 아닌 주소를 저장한다.

리터럴: 변수에 들어가는 값

2차원 배열은 표 형태가 아니다.
{} -> 객체 -> 변수. 찍고 들어간다. = obj.y
ㄴ배열 표시 형태는 문자열 형태로. = obj['y']★★

존재하지 않는 변수를 사용하면 화면상에 undefined로 뜬다. -> 정상적인 구문

document.write(arr2[1][1]+'<br/>');
document.write(arr2[[2]]+'<br/>');

새로바뀐 ip주소: 192.168.0.13

★
자바에서의 문자열은 클래스. = 참조형
자바스크립트는 문자열(string) = 기본형 = 값이 같다고 취급한다.
0==false, 1==true 

let, const로 만들면 이렇게 같은 이름의 변수를 두번 이상 재선언할 수 없습니다. 에러가 납니다. 

나중에 변수 이름을 실수로 중복해서 만드는 실수를 방지해주는 고마운 기능입니다. 

값이 없다 자체가 false

false는 앞에 이미 false면 뒤에 뭐가 나오든 false로 나온다.


모든 네트워크/신호는 문자열로 처리한다.

for(var i=0;;){ -> js는 변수를 var로 쓴다! int가 없다!
}

향상된 for문을 쓰기 위해서는 반드시 집합이어야! =배열이거나 객체이거나

자바스크립트는 인덱스를 넣어서 반복문에 넣었을 때 뽑아준다.

html 파일 만들기
others>web>html

<tr>태그 열고 닫고 자체가 하나의 행을 의미


new 반대가 delete (자바는 없음, 대신 garbage collector가 수거하는 애가 따로 있다)
객체 생성 / 객체 삭제

str.indexOf는 문자열에서 특정 문자나 부분 문자열이 처음 등장하는 위치를 찾는 메서드
str.lastIndexOf는 문자열 str에서 마지막으로부터 특정 문자가 처음으로 발견되는 위치를 반환하는 함수
str.length는 문자열의 길이를 구하는 속성이나 메서드
str.startsWith는 문자열이 특정 문자열로 시작하는지 확인하는 함수
str.endsWith는 주어진 문자열이 특정 문자열로 끝나는지 확인하는 메서드
str.includes는 자바스크립트에서 문자열에 특정한 값이 포함되어 있는지 확인하는 메서드


substring("시작 위치", "종료 위치") 또는 substring("시작 위치")
substring() 함수는 시작 위치에서 종료 위치까지 문자열을 자른다. 주의할 점은 종료 위치의 -1까지 문자열을 자른다

slice("시작 위치", "종료 위치") 또는 slice("시작 위치")
slice() 함수는 기본적인 사용법은 substring() 함수와 동일하며, 다른 점은 음수(-)를 자유롭게 사용할 수 있어서 뒤에서부터 문자열을 자를 때 유용하게 사용할 수 있다.

.substring( 5, 12 ): 5번째부터 12번째 앞에거까지
.substr(5, 7 ): 5번째부터 시작해서 7개
.split(' ') : 공백을 중심으로 자르기
concat: 문자열 더하기

템플릿: 틀

자바스크립트는 정수 실수 전체를 number형으로 퉁쳤어

1.23e+2 에서 e는 지수형
= 1.23*10의 +2승

.toExponential(n) n만큼 소수점 자리 * 10의 몇승
 
 Precision: 정도

.toExponential(4)//소수점 몇째자리, 몇.몇*10의 몇승
.toFixed(3)//소수점 몇째자리	
.toPrecision(6)//전체 자리수

숫자 변환
Number(변수)=parseInt(변수): 숫자 변환

NaN: not a number
ㄴ 숫자가 아닌 애가 들어왔을 때

ㅡㅡㅡㅡ자바스크립트: 100% 개발자 역할, 꼼꼼하게 정리 ㅡㅡㅡㅡㅡㅡ

--------부트스트랩 맛보기--------

https://getbootstrap.com/
3버전
https://getbootstrap.com/docs/3.4 -> 버전 낮춰서 -download 

카페 - bootstrap-3.4.1-dist.zip ->부트스트랩 다운 파일
이안에 css, fonts, js 폴더가 들어있어
개발자들은 네트워크 없어도 개발할 수 있도록 외부 라이브러리를 다운받아 놓는대
Components: 구성요소

부트스트랩: 화면 만들어줄게
클래스명을 지정해야해
페이스북부터 시작해서 이미지를 쓰지 말자고 시작한 개념

부트스트랩은 기본적으로 반응형을 제공-모바일에서도 편하게 사용가능

부트스트랩 준비물
css, jquery, js 연결
class를 써라

갖다쓰면 된다.

[오늘의 할일]
1. 자바스크립트 정리
 포인트: JS만의 특성 정리
2. SQL 문장 점검
 [1] 오늘까지 재시험 제출
 [2] 내실력 푼사람-나의 실수 점검
 [3] 내실력x -직접 확인
 
 ㄴ DB만큼은 막히면 안되니 확실하게 하고 가기
 
 

























